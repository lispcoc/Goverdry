class SoundEffect {
  constructor (data) {
    this.sound = []
    this.count = 0
    this.max = 3
    if (getDevice() == 'sp') {
      this.max = 1
    }
    for (let i = 0; i < this.max; i++) {
      if (AudioPlay) {
        this.sound[i] = data.cloneNode()
      } else {
        this.sound[i] = data.clone()
      }
    }
  }
  mute (value) {
    if (!AudioPlay) {
      return
    }
    if (value == undefined || value == null) {
      value = true
    }
    for (let i = 0; i < this.max; i++) {
      this.sound[i].muted = value
      if (value) {
        this.sound[i].volume = 0.0
      }
    }
  }
  play () {
    if (AudioPlay) {
      this.sound[this.count].currentTime = 0
    } else {
      try {
        this.sound[this.count].stop()
      } catch (e) {}
    }
    this.sound[this.count].volume = calTimes(Number(Config['SeVolume']), 0.01)
    this.sound[this.count].play()
    this.count++
    if (this.count >= this.max) {
      this.count = 0
    }
  }
  playAll () {
    if (AudioPlay) {
      this.sound[this.count].pause()
      this.sound[this.count].currentTime = 0
    } else {
      try {
        this.sound[this.count].stop()
      } catch (e) {}
    }
    this.count = 0
    for (let i = 0; i < this.max; i++) {
      this.sound[i].play()
    }
  }
  stop () {
    for (let i = 0; i < this.max; i++) {
      if (AudioPlay) {
        this.sound[i].pause()
        this.sound[i].currentTime = 0
      } else {
        try {
          this.sound[i].stop()
        } catch (e) {}
      }
    }
  }
}
