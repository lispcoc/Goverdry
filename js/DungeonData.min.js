class DungeonData {
  constructor () {
    this.DUNGEON_MAX, (this.DUNGEON_CONDITION = [])
    this.FindDoor, this.PickDoor
    ;(this.NotWarp = []), (this.NotUseWarp = [])
    ;(this.Light = []), (this.NoFriendship = []), (this.FloorMusicCheck = [])
    ;(this.StartFloor = []), (this.StartDirection = [])
    ;(this.StartPointX = []), (this.StartPointY = [])
    ;(this.Width = []), (this.Height = [])
    this.FloorMinMax = []
    this.EnterLimit = []
    ;(this.EncounterNum = []), (this.MonsterRoom = [])
    this.CheckedMonsterRoom = []
    ;(this.DungeonName = []), (this.DungeonMusic = [])
    ;(this.CheckedSpacePreCheck = []), (this.StartFlag = [])
    ;(this.EncounterRate = []), (this.EncounterMonsters = [])
    ;(this.DungeonFlag = []), (this.MonsterRoomEncounterRate = [])
    ;(this.NoMusicCamp = []), (this.BoxTrap = []), (this.BoxGold = [])
    ;(this.BoxAppearance = []), (this.DungeonImage = [])
    ;(this.BattleMusic = []), (this.FloorMusic = []), (this.FloorName = [])
    this.RoomGuardian = []
    ;(this.WestWall = []), (this.SouthWall = []), (this.Space = [])
    this.DungeonImageStr = ''
  }
  checkMapFlag () {
    let ptNum = PlayData['ActiveParty']
    if (ptNum < 0) {
      return
    }
    let pt = PARTY[ptNum]
    if (pt.DungeonNumber < 0 || pt.DungeonNumber >= this.DUNGEON_MAX) {
      return
    }
    if (pt.Floor < 0 || pt.Floor >= this.FloorMinMax[pt.DungeonNumber].length) {
      return
    }
    if (pt.X < 0 || pt.X >= this.Width[pt.DungeonNumber]) {
      return
    }
    if (pt.Y < 0 || pt.Y >= this.Height[pt.DungeonNumber]) {
      return
    }
    if (!PlayData['MapFlag'][pt.DungeonNumber][pt.Floor][pt.X][pt.Y]) {
      PlayData['MapFlag'][pt.DungeonNumber][pt.Floor][pt.X][pt.Y] = true
    }
  }
  checkSpaceNotTeleport (space, checkStr) {
    let strAry = space.split('<>')
    let strAry2 = strAry[0].split(',')
    if (checkStr == 'b') {
      if (strAry2.indexOf('b') > -1) {
        return true
      } else {
        return false
      }
    } else if (checkStr == 'c') {
      if (
        strAry2.indexOf('c0') > -1 ||
        strAry2.indexOf('c1') > -1 ||
        strAry2.indexOf('c2') > -1
      ) {
        return true
      } else {
        return false
      }
    } else {
      return false
    }
  }
  checkSpaceSpellUsed (dungeon, floor, x, y) {
    if (
      this.Space[dungeon][floor][x][y] == undefined ||
      this.Space[dungeon][floor][x][y] == null
    ) {
      return -2
    }
    let strAry = this.Space[dungeon][floor][x][y].split('<>')
    let strAry2 = strAry[0].split(',')
    if (strAry2[0] == 'c') {
      return Number(strAry2[1])
    } else if (strAry2.indexOf('c0') > -1) {
      return 0
    } else if (strAry2.indexOf('c1') > -1) {
      return 1
    } else if (strAry2.indexOf('c2') > -1) {
      return 2
    } else {
      return -1
    }
  }
  checkWall (wall, dungeon, floor, direction) {
    let result = 0
    if (wall.match(/^[12]/)) {
      let num = 0
      let strAry = wall.split(',')
      if (strAry.length > 1) {
        num = Number(strAry[1])
      }
      let flag = true
      if (num >= 0 && num < 512) {
        if (!PlayData['WallFlag'][dungeon][floor][num]) {
          flag = false
        }
      }
      if (flag) {
        if (wall.charAt(0) == '1') {
          result = 1
        } else {
          result = 2
        }
      }
    } else if (wall.charAt(0) == '3') {
      let strAry = wall.split(',')
      if (strAry.length < 3) {
        return 2
      }
      let num = Number(strAry[2])
      if (num < 0 || num > 511) {
        return 2
      }
      if (PlayData['SecretDoor'][dungeon][floor][num]) {
        return 2
      } else if (strAry[3].match(/^(ws|en)$/)) {
        let flag = true
        if (direction == 0) {
          if (strAry[3].indexOf('ws') > -1) {
            flag = false
          }
        } else if (direction == 1) {
          if (strAry[3].indexOf('ws') > -1) {
            flag = false
          }
        } else if (direction == 2) {
          if (strAry[3].indexOf('en') > -1) {
            flag = false
          }
        } else if (direction == 3) {
          if (strAry[3].indexOf('en') > -1) {
            flag = false
          }
        }
        if (flag) {
          return 4
        } else {
          return 1
        }
      } else {
        return 4
      }
    } else if (wall.charAt(0) == '4') {
      let strAry = wall.split(',')
      let d = Number(strAry[1])
      if (direction == d) {
        result = 2
      } else {
        result = 1
      }
    } else if (wall.charAt(0) == '5') {
      let strAry = wall.split(',')
      let d = Number(strAry[1])
      if (direction != d) {
        result = 1
      }
    } else if (wall.charAt(0) == '6') {
      let strAry = wall.split(',')
      let num = Number(strAry[2])
      if (num < 0 || num > 511) {
        return 2
      }
      if (PlayData['LockedDoor'][dungeon][floor][num]) {
        return 2
      } else {
        return 3
      }
    }
    return result
  }
  controlCheckedMonsterRoom (b) {
    for (let i = 0; i < 100; i++) {
      this.CheckedMonsterRoom[i] = b
    }
  }
  controlCheckedMonsterRoomNum (roomNum, b) {
    let roomAry = roomNum.split(',')
    for (let i = 0; i < roomAry.length; i++) {
      let num = Number(roomAry[i])
      if (num > 99) {
        continue
      }
      this.CheckedMonsterRoom[num] = b
    }
  }
  getDungeonMusic () {
    let ptNum = PlayData['ActiveParty']
    if (ptNum < 0) {
      return ''
    }
    let pt = PARTY[ptNum]
    if (pt.DungeonNumber < 0 || pt.Floor < 0) {
      return ''
    }
    let str = pt.DungeonMusic
    if (str != '') {
      let strAry = str.split(',')
      return strAry[1]
    }
    str = PlayData['DungeonNewMusic'][pt.DungeonNumber][pt.Floor]
    if (str != '') {
      return str
    }
    if (DUNGEON.FloorMusicCheck[pt.DungeonNumber][pt.Floor]) {
      return DUNGEON.FloorMusic[pt.DungeonNumber][pt.Floor]
    } else {
      return DUNGEON.DungeonMusic[pt.DungeonNumber]
    }
  }
  getFloorName (dungeon, floor) {
    let result = DUNGEON.FloorName[dungeon][floor]
    if (result == '') {
      let num = DUNGEON.FloorMinMax[dungeon][floor]
      if (num < 0) {
        result = getDefaultMessage('VIEW_UNDERGROUND_FLOOR', 1)
        num *= -1
      } else {
        result = getDefaultMessage('VIEW_GROUND_FLOOR', 1)
      }
      result = result.replace(/\[floorNum\]/g, String(num))
    }
    result = MP.strCut(result, 24)
    return result
  }
  getPoint (dungeon, widthHeight, point) {
    let wh = 20
    if (widthHeight == 'w') {
      if (dungeon < 0) {
        wh = TempVariable['width']
      } else {
        wh = this.Width[dungeon]
      }
    } else if (widthHeight == 'h') {
      if (dungeon < 0) {
        wh = TempVariable['height']
      } else {
        wh = this.Height[dungeon]
      }
    }
    if (point >= wh) {
      if (point >= wh * 2) {
        point -= wh * 2
      } else {
        point -= wh
      }
    } else if (point < 0) {
      if (point < wh * -1) {
        point += wh * 2
      } else {
        point += wh
      }
    }
    return point
  }
  getSpaceData (dungeon, floor, x, y, direction) {
    let space
    if (dungeon < 0) {
      space = TempVariable['space']
    } else {
      space = this.Space[dungeon][floor]
    }
    let ary = []
    if (direction == 0) {
      ary.push(
        space[this.getPoint(dungeon, 'w', x)][this.getPoint(dungeon, 'h', y)]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x - 1)][
          this.getPoint(dungeon, 'h', y)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x - 1)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x - 2)][
          this.getPoint(dungeon, 'h', y + 2)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x - 1)][
          this.getPoint(dungeon, 'h', y + 2)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x)][
          this.getPoint(dungeon, 'h', y + 2)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y + 2)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x + 2)][
          this.getPoint(dungeon, 'h', y + 2)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x - 2)][
          this.getPoint(dungeon, 'h', y + 3)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x - 1)][
          this.getPoint(dungeon, 'h', y + 3)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x)][
          this.getPoint(dungeon, 'h', y + 3)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y + 3)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x + 2)][
          this.getPoint(dungeon, 'h', y + 3)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x - 2)][
          this.getPoint(dungeon, 'h', y)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x + 2)][
          this.getPoint(dungeon, 'h', y)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x - 2)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x + 2)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
      )
    } else if (direction == 1) {
      ary.push(
        space[this.getPoint(dungeon, 'w', x)][this.getPoint(dungeon, 'h', y)]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x)][
          this.getPoint(dungeon, 'h', y - 1)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y - 1)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x + 2)][
          this.getPoint(dungeon, 'h', y + 2)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x + 2)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x + 2)][
          this.getPoint(dungeon, 'h', y)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x + 2)][
          this.getPoint(dungeon, 'h', y - 1)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x + 2)][
          this.getPoint(dungeon, 'h', y - 2)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x + 3)][
          this.getPoint(dungeon, 'h', y + 2)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x + 3)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x + 3)][
          this.getPoint(dungeon, 'h', y)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x + 3)][
          this.getPoint(dungeon, 'h', y - 1)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x + 3)][
          this.getPoint(dungeon, 'h', y - 2)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x)][
          this.getPoint(dungeon, 'h', y + 2)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x)][
          this.getPoint(dungeon, 'h', y - 2)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y + 2)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y - 2)
        ]
      )
    } else if (direction == 2) {
      ary.push(
        space[this.getPoint(dungeon, 'w', x)][this.getPoint(dungeon, 'h', y)]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x - 1)][
          this.getPoint(dungeon, 'h', y)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y - 1)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x)][
          this.getPoint(dungeon, 'h', y - 1)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x - 1)][
          this.getPoint(dungeon, 'h', y - 1)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x + 2)][
          this.getPoint(dungeon, 'h', y - 2)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y - 2)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x)][
          this.getPoint(dungeon, 'h', y - 2)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x - 1)][
          this.getPoint(dungeon, 'h', y - 2)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x - 2)][
          this.getPoint(dungeon, 'h', y - 2)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x + 2)][
          this.getPoint(dungeon, 'h', y - 3)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y - 3)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x)][
          this.getPoint(dungeon, 'h', y - 3)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x - 1)][
          this.getPoint(dungeon, 'h', y - 3)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x - 2)][
          this.getPoint(dungeon, 'h', y - 3)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x + 2)][
          this.getPoint(dungeon, 'h', y)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x - 2)][
          this.getPoint(dungeon, 'h', y)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x + 2)][
          this.getPoint(dungeon, 'h', y - 1)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x - 2)][
          this.getPoint(dungeon, 'h', y - 1)
        ]
      )
    } else if (direction == 3) {
      ary.push(
        space[this.getPoint(dungeon, 'w', x)][this.getPoint(dungeon, 'h', y)]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x)][
          this.getPoint(dungeon, 'h', y - 1)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x - 1)][
          this.getPoint(dungeon, 'h', y - 1)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x - 1)][
          this.getPoint(dungeon, 'h', y)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x - 1)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x - 2)][
          this.getPoint(dungeon, 'h', y - 2)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x - 2)][
          this.getPoint(dungeon, 'h', y - 1)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x - 2)][
          this.getPoint(dungeon, 'h', y)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x - 2)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x - 2)][
          this.getPoint(dungeon, 'h', y + 2)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x - 3)][
          this.getPoint(dungeon, 'h', y - 2)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x - 3)][
          this.getPoint(dungeon, 'h', y - 1)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x - 3)][
          this.getPoint(dungeon, 'h', y)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x - 3)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x - 3)][
          this.getPoint(dungeon, 'h', y + 2)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x)][
          this.getPoint(dungeon, 'h', y - 2)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x)][
          this.getPoint(dungeon, 'h', y + 2)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x - 1)][
          this.getPoint(dungeon, 'h', y - 2)
        ]
      )
      ary.push(
        space[this.getPoint(dungeon, 'w', x - 1)][
          this.getPoint(dungeon, 'h', y + 2)
        ]
      )
    }
    return ary
  }
  getWallData (dungeon, floor, x, y, direction) {
    let westWall, southWall
    if (dungeon < 0) {
      westWall = TempVariable['westWall']
      southWall = TempVariable['southWall']
    } else {
      westWall = this.WestWall[dungeon][floor]
      southWall = this.SouthWall[dungeon][floor]
    }
    let ary = []
    if (direction == 0) {
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x)][this.getPoint(dungeon, 'h', y)]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x - 1)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x)][
          this.getPoint(dungeon, 'h', y + 2)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x - 1)][
          this.getPoint(dungeon, 'h', y + 2)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y + 2)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x)][
          this.getPoint(dungeon, 'h', y + 3)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x - 1)][
          this.getPoint(dungeon, 'h', y + 2)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x)][
          this.getPoint(dungeon, 'h', y + 2)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y + 2)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x + 2)][
          this.getPoint(dungeon, 'h', y + 2)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x - 2)][
          this.getPoint(dungeon, 'h', y + 3)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x - 1)][
          this.getPoint(dungeon, 'h', y + 3)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y + 3)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x + 2)][
          this.getPoint(dungeon, 'h', y + 3)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x)][
          this.getPoint(dungeon, 'h', y + 4)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x - 1)][
          this.getPoint(dungeon, 'h', y + 3)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x)][
          this.getPoint(dungeon, 'h', y + 3)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y + 3)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x + 2)][
          this.getPoint(dungeon, 'h', y + 3)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x - 2)][
          this.getPoint(dungeon, 'h', y + 4)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x - 1)][
          this.getPoint(dungeon, 'h', y + 4)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y + 4)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x + 2)][
          this.getPoint(dungeon, 'h', y + 4)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x - 1)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x + 2)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x - 2)][
          this.getPoint(dungeon, 'h', y + 2)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x + 2)][
          this.getPoint(dungeon, 'h', y + 2)
        ]
      )
    } else if (direction == 1) {
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x)][
          this.getPoint(dungeon, 'h', y)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y - 1)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x + 2)][
          this.getPoint(dungeon, 'h', y)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x + 2)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x + 2)][
          this.getPoint(dungeon, 'h', y - 1)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x + 3)][
          this.getPoint(dungeon, 'h', y)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x + 2)][
          this.getPoint(dungeon, 'h', y + 2)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x + 2)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x + 2)][
          this.getPoint(dungeon, 'h', y)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x + 2)][
          this.getPoint(dungeon, 'h', y - 1)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x + 3)][
          this.getPoint(dungeon, 'h', y + 2)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x + 3)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x + 3)][
          this.getPoint(dungeon, 'h', y - 1)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x + 3)][
          this.getPoint(dungeon, 'h', y - 2)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x + 4)][
          this.getPoint(dungeon, 'h', y)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x + 3)][
          this.getPoint(dungeon, 'h', y + 2)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x + 3)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x + 3)][
          this.getPoint(dungeon, 'h', y)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x + 3)][
          this.getPoint(dungeon, 'h', y - 1)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x + 4)][
          this.getPoint(dungeon, 'h', y + 2)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x + 4)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x + 4)][
          this.getPoint(dungeon, 'h', y - 1)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x + 4)][
          this.getPoint(dungeon, 'h', y - 2)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y + 2)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y - 1)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x + 2)][
          this.getPoint(dungeon, 'h', y + 2)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x + 2)][
          this.getPoint(dungeon, 'h', y - 2)
        ]
      )
    } else if (direction == 2) {
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x)][
          this.getPoint(dungeon, 'h', y)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x)][this.getPoint(dungeon, 'h', y)]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x - 1)][
          this.getPoint(dungeon, 'h', y)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x)][
          this.getPoint(dungeon, 'h', y - 1)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y - 1)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x)][
          this.getPoint(dungeon, 'h', y - 1)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y - 1)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x - 1)][
          this.getPoint(dungeon, 'h', y - 1)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x)][
          this.getPoint(dungeon, 'h', y - 2)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x + 2)][
          this.getPoint(dungeon, 'h', y - 2)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y - 2)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x)][
          this.getPoint(dungeon, 'h', y - 2)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x - 1)][
          this.getPoint(dungeon, 'h', y - 2)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x + 2)][
          this.getPoint(dungeon, 'h', y - 2)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y - 2)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x - 1)][
          this.getPoint(dungeon, 'h', y - 2)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x - 2)][
          this.getPoint(dungeon, 'h', y - 2)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x)][
          this.getPoint(dungeon, 'h', y - 3)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x + 2)][
          this.getPoint(dungeon, 'h', y - 3)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y - 3)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x)][
          this.getPoint(dungeon, 'h', y - 3)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x - 1)][
          this.getPoint(dungeon, 'h', y - 3)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x + 2)][
          this.getPoint(dungeon, 'h', y - 3)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y - 3)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x - 1)][
          this.getPoint(dungeon, 'h', y - 3)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x - 2)][
          this.getPoint(dungeon, 'h', y - 3)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x + 2)][
          this.getPoint(dungeon, 'h', y - 1)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x - 1)][
          this.getPoint(dungeon, 'h', y - 1)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x + 2)][
          this.getPoint(dungeon, 'h', y - 1)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x - 2)][
          this.getPoint(dungeon, 'h', y - 1)
        ]
      )
    } else if (direction == 3) {
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x)][this.getPoint(dungeon, 'h', y)]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x)][
          this.getPoint(dungeon, 'h', y)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x)][
          this.getPoint(dungeon, 'h', y - 1)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x - 1)][
          this.getPoint(dungeon, 'h', y)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x - 1)][
          this.getPoint(dungeon, 'h', y)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x - 1)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x - 1)][
          this.getPoint(dungeon, 'h', y - 1)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x - 1)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x - 2)][
          this.getPoint(dungeon, 'h', y)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x - 2)][
          this.getPoint(dungeon, 'h', y - 1)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x - 2)][
          this.getPoint(dungeon, 'h', y)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x - 2)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x - 2)][
          this.getPoint(dungeon, 'h', y + 2)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x - 2)][
          this.getPoint(dungeon, 'h', y - 2)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x - 2)][
          this.getPoint(dungeon, 'h', y - 1)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x - 2)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x - 2)][
          this.getPoint(dungeon, 'h', y + 2)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x - 3)][
          this.getPoint(dungeon, 'h', y)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x - 3)][
          this.getPoint(dungeon, 'h', y - 1)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x - 3)][
          this.getPoint(dungeon, 'h', y)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x - 3)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x - 3)][
          this.getPoint(dungeon, 'h', y + 2)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x - 3)][
          this.getPoint(dungeon, 'h', y - 2)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x - 3)][
          this.getPoint(dungeon, 'h', y - 1)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x - 3)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x - 3)][
          this.getPoint(dungeon, 'h', y + 2)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x - 1)][
          this.getPoint(dungeon, 'h', y - 1)
        ]
      )
      ary.push(
        southWall[this.getPoint(dungeon, 'w', x - 2)][
          this.getPoint(dungeon, 'h', y + 2)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x - 1)][
          this.getPoint(dungeon, 'h', y - 2)
        ]
      )
      ary.push(
        westWall[this.getPoint(dungeon, 'w', x - 1)][
          this.getPoint(dungeon, 'h', y + 2)
        ]
      )
    }
    return ary
  }
  getWallDataInFront (dungeon, floor, x, y, direction) {
    let westWall = this.WestWall[dungeon][floor]
    let southWall = this.SouthWall[dungeon][floor]
    let wall = ''
    if (direction == 0) {
      wall =
        southWall[this.getPoint(dungeon, 'w', x)][
          this.getPoint(dungeon, 'h', y + 1)
        ]
    } else if (direction == 1) {
      wall =
        westWall[this.getPoint(dungeon, 'w', x + 1)][
          this.getPoint(dungeon, 'h', y)
        ]
    } else if (direction == 2) {
      wall =
        southWall[this.getPoint(dungeon, 'w', x)][
          this.getPoint(dungeon, 'h', y)
        ]
    } else if (direction == 3) {
      wall =
        westWall[this.getPoint(dungeon, 'w', x)][this.getPoint(dungeon, 'h', y)]
    }
    return wall
  }
  getWarpPoint (warp, dungeonNum) {
    let point = warp.split(',')
    point[0] = DUNGEON.getPoint(dungeonNum, 'w', Number(point[1]))
    point[1] = DUNGEON.getPoint(dungeonNum, 'h', Number(point[2]))
    return point
  }
}
